services:
  vote:
    build:
      context: .
      dockerfile: vote/Dockerfile
    networks:
      - vote
    ports:
      - "8080:8080"
    depends_on:
      - redis
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    networks:
      - vote
      - result
    depends_on:
      - redis
      - postgres
    # healthcheck:
    #   test: ["CMD-SHELL", "celery", "-A", "worker", "inspect", "ping"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  result:
    build:
      context: .
      dockerfile: result/Dockerfile
    networks:
      - result
    ports:
      - "8888:8888"
    depends_on:
      - postgres
      - worker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    networks:
      - vote
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - result
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  vote:
  result:

volumes:
  postgres_data: